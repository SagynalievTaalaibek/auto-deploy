import { useState } from 'react';
import { useRef } from 'react';

import {
	Box,
	Button,
	FormControl,
	InputLabel,
	MenuItem,
	Paper,
	Select,
	Typography,
} from '@mui/material';
import { LocalizationProvider } from '@mui/x-date-pickers';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';
import { DatePicker } from '@mui/x-date-pickers/DatePicker';
import dayjs, { Dayjs } from 'dayjs';
import html2pdf from 'html2pdf.js';

import { fetchReport } from '../../../../features/reports/reports.thunks.ts';
import { useAppDispatch } from '../../../../shared/hooks/hooksStore.ts';

import { ReportFinanceTable } from './report-finance-table.tsx';
import { ReportInventoryTable } from './report-inventory-table.tsx';
import { ReportOrdersTable } from './report-orders-table.tsx';
import { ReportStaffTable } from './report-staff-table.tsx';

export function ReportsPage() {
	const reportRef = useRef<HTMLDivElement>(null);

	const dispatch = useAppDispatch();
	const [startDate, setStartDate] = useState<Dayjs | null>(
		dayjs().startOf('month'),
	);
	const [endDate, setEndDate] = useState<Dayjs | null>(dayjs());
	const [reportType, setReportType] = useState('orders');
	const [showTable, setShowTable] = useState(false);

	const handleShow = async () => {
		await dispatch(fetchReport({ reportType, startDate, endDate }));
		setShowTable(true);
	};

	const handleExport = () => {
		const input = reportRef.current;
		if (!input) return;

		const opt = {
			margin: 5,
			filename: `report-${reportType}-${startDate?.format('YYYYMMDD')}-${endDate?.format('YYYYMMDD')}.pdf`,
			image: { type: 'jpeg', quality: 0.98 },
			html2canvas: { scale: 2, useCORS: true },
			jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' },
			pagebreak: { mode: ['avoid-all', 'css', 'legacy'] },
		};

		html2pdf().set(opt).from(input).save();
	};

	const renderReportTable = () => {
		switch (reportType) {
			case 'orders':
				return <ReportOrdersTable />;
			case 'finance':
				return <ReportFinanceTable />;
			case 'warehouse':
				return <ReportInventoryTable />;
			case 'staff':
				return <ReportStaffTable />;
			default:
				return null;
		}
	};

	return (
		<Box sx={{ py: 3, width: '100%' }}>
			<Paper sx={{ p: 3, mb: 4 }}>
				<Typography variant="h6" mb={2}>
					–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç—á–µ—Ç–∞
				</Typography>

				<Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>
					<FormControl fullWidth>
						<InputLabel id="report-type-label">–¢–∏–ø –æ—Ç—á–µ—Ç–∞</InputLabel>
						<Select
							labelId="report-type-label"
							value={reportType}
							label="–¢–∏–ø –æ—Ç—á–µ—Ç–∞"
							onChange={e => {
								setReportType(e.target.value);
								setShowTable(false); // —Å–±—Ä–æ—Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–∏–ø–∞
							}}
						>
							<MenuItem value="orders">–ó–∞–∫–∞–∑—ã</MenuItem>
							<MenuItem value="finance">–§–∏–Ω–∞–Ω—Å—ã</MenuItem>
							<MenuItem value="warehouse">–°–∫–ª–∞–¥</MenuItem>
							<MenuItem value="staff">–ü–µ—Ä—Å–æ–Ω–∞–ª</MenuItem>
						</Select>
					</FormControl>

					<LocalizationProvider dateAdapter={AdapterDayjs}>
						<Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>
							<DatePicker
								label="–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞"
								value={startDate}
								onChange={newValue => setStartDate(newValue)}
							/>
							<DatePicker
								label="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è"
								value={endDate}
								onChange={newValue => setEndDate(newValue)}
							/>
						</Box>
					</LocalizationProvider>

					<Box sx={{ display: 'flex', gap: 2 }}>
						<Button variant="contained" color="primary" onClick={handleShow}>
							üîç –ü–æ–∫–∞–∑–∞—Ç—å
						</Button>

						{showTable && (
							<Button
								variant="contained"
								color="secondary"
								onClick={handleExport}
							>
								üìÑ –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF
							</Button>
						)}
					</Box>
				</Box>
			</Paper>

			{showTable && (
				<div ref={reportRef}>
					<Paper sx={{ p: 3, mb: 4 }}>
						<Typography variant="h6" mb={2}>
							üìä –û—Ç—á–µ—Ç: {startDate?.format('YYYY-MM-DD')} -{' '}
							{endDate?.format('YYYY-MM-DD')}
						</Typography>
						{renderReportTable()}
					</Paper>
				</div>
			)}

			<Paper sx={{ p: 3 }}>
				<Typography variant="h6" mb={2}>
					üìå –û–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –æ—Ç—á–µ—Ç–æ–≤
				</Typography>
				<ul style={{ marginLeft: '1.2rem', lineHeight: 1.8 }}>
					<li>
						<strong>–ó–∞–∫–∞–∑—ã</strong>: —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.
					</li>
					<li>
						<strong>–§–∏–Ω–∞–Ω—Å—ã</strong>: –≤—ã—Ä—É—á–∫–∞, —Ä–∞—Å—Ö–æ–¥—ã, –ø—Ä–∏–±—ã–ª—å.
					</li>
					<li>
						<strong>–°–∫–ª–∞–¥</strong>: –¥–≤–∏–∂–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ, —Å–ø–∏—Å–∞–Ω–∏–µ).
					</li>
					<li>
						<strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</strong>: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
					</li>
				</ul>
			</Paper>
		</Box>
	);
}
